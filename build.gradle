plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.chillvibe'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Logging
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	// Swagger (SpringDoc OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// JAXB (to improve XML processing performance for AWS SDK)
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// Spotify
	implementation 'se.michaelthelin.spotify:spotify-web-api-java:8.4.1'

	// Jackson
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-core'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL Connector
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// Spring Boot Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring Security Test
	testImplementation 'org.springframework.security:spring-security-test'

	// JUnit Platform Launcher
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
